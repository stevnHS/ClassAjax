@model ClassAjax.Models.MemberDTO

<h4>MemberDTO</h4>
<hr />
<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
        <h1>Register</h1>
        <form method="post" action="~/classapi/register" id="userForm">
            <div class="mb-3">
                <label for="InputName" class="form-label">姓名</label>
                <input type="text" class="form-control" id="InputName" name="name">

            </div>
            <div class="mb-3">
                <label for="InputEmail" class="form-label">電子郵件</label>
                <input type="email" class="form-control" id="InputEmail" name="email">
            </div>
            <div class="mb-3">
                <label for="InputAge" class="form-label">年紀</label>
                <input type="number" class="form-control" id="InputAge" name="age">
            </div>
            <div class="mb-3">
                <label for="formFile" class="form-label">圖像</label>
                <input class="form-control" type="file" id="formFile" name="avatar">
            </div>
            <button type="submit" class="btn btn-primary" id="buttonSubmit">送出</button>
        </form>
        <div id="div1" class="alert alert-info mt-3"></div>

    </div>
    <div class="col-3"></div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const divResult = document.querySelector('#div1');
        const btnSubmit = document.querySelector('#buttonSubmit');
        const inpName = document.querySelector('#InputName');
        const inpEmail = document.querySelector('#InputEmail');
        const inpAge = document.querySelector('#InputAge');
        btnSubmit.addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            //將資料放進FormData
            const myForm = document.querySelector('#userForm');
            const formData = new FormData(myForm);
            //formData.append("password", "12345678");
            //讀出formData中的資料
            //for(const pair of formData.entries()){
            //    console.log(`${pair[0]}:${pair[1]}`);
            //}
            const url = '@Url.Content("~/classapi/register/")';
            const response = await fetch(url, {
                method: 'POST',
                body: formData
            });
            const data = await response.text();
            divResult.textContent = data;
                            //console.log(inpName.value);

            //const url = `@Url.Content("~/api/register/")?email=${inpEmail.value}&age=${inpAge.value}&name=${inpName.value}`;
            //const response =  await fetch(url);
            //const data = await response.text();
            //divResult.textContent = data;
        })
                
    </script>
}
