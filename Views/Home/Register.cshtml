@model ClassAjax.Models.MemberDTO

<h4>MemberDTO</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Register">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="userName" class="control-label">
                    姓名:
                </label>
                <input asp-for="userName" class="form-control" />
                <span asp-validation-for="userName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label">電子郵件:</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label">年紀:</label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" id="buttonSubmit" />
            </div>
        </form>
        <div id="div1" class="alert alert-info mt-3"></div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const divResult = document.querySelector('#div1');
        const btnSubmit = document.querySelector('#buttonSubmit');
        const inpName = document.querySelector('#InputName');
        const InpEmail = document.querySelector('#InputEmail');
        const InpAge = document.querySelector('#InputAge');
        btnSubmit.addEventListener('click', async (evt) => {
            evt.preventDefault(); //防止預設行為的發生
            console.log(inpName.value);
            const url = `@Url.Content("~/api/register/")?email=${inpEmail.value}&age=${inpAge.value}&name=${inpName.value}`;
            const response = await fetch(url);
            const data = await response.text();
            divResult.textContent = data;
        })
    </script>
}
